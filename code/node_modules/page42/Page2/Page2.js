var View = require("view42");
var util = require("util42");

var Page2 = module.exports = View.extend({
	name: "Page2",
	autoRender: false,
	instantiate: function(){
		this.pages = [];
		View.prototype.instantiate.apply(this, arguments);
		this.addClass(this.name);
	},
	set_route: function(route){
		this.route = route;
		route.page = this;

		if (this.route.part.length){
			this.set_name(this.route.part);
		}

		route.then(function(){
			this.activate();
		}.bind(this));
	},
	content: function(){
		View.h1("Page: " + this.name);
	},
	getParentPageFromRoute: function(){
		// console.group("getParentPageFromRoute", this.name);
		var route = this.route.parent;
		while (route){
			if (route === this.app.route){
				// we don't want to parent to the homepage, so switch this to the app itself...
				// console.log("parent: app");
				this.app.addPage(this);
				route = false;
				break;
			}
			if (route.page){
				// console.log("parent", route.page.name);
				route.page.addPage(this);
				route = false;
				break;
			} else {
				route = route.parent;
			}
		}
		// console.groupEnd();
		return false;
	},
	activate: function(){
		if (this !== this.app.activePage){
			if (this.app.activePage !== this.app)
				this.app.activePage.deactivate().then(this.activateSelf.bind(this));
			else
				this.activateSelf();
		}
	},
	push: function(){
		this.route && this.route.activate();
	},
	in: function(){
		return this.$el.fadeIn().promise();
	},
	activateSelf: function(){
		this.log = true;
		this.app.captureFn(function(){
			this.hide();
			this.render();
		}.bind(this));
		this.app.activePage = this;
		this.push(); // this has to come after the above line
		return this.in();
	},
	out: function(){
		return this.$el.fadeOut().promise();
	},
	deactivate: function(){
		return this.out();
	},
	addPage: function(page){
		if (!(page instanceof Page2))
			console.warn("not a page");

		page.parent = this;
		page.app = this.app;

		this.pages.push(page);

		if (!this[page.name])
			this[page.name] = page;
	},
	jsName: function(name){
		var sname = util.sanitizeString(name);
		return sname.replace("-", "_");
	},
	set_name: function(name){
		this.name = this.jsName(name);
	},
	logger: function(){
		console.group(this.name);
		console.log("parent", this.parent && this.parent.name);
		for (var i = 0; i < this.pages.length; i++){
			this.pages[i].logger();
		}
		console.groupEnd();
	}
});