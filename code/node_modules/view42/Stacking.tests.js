var View = require("./View1");
require("./layouts.less");
require("./stacking.less");
var test = require("test42");

var itm = View.extend({
	name: "Itm"
});

var p = View.p.extend({
	name: "p",
	addClass: "itm"
});

var Card = View.extend({
	name: "Card"
});


// test("Card", function(){
	View(function(){
		this.addClass("ddd x-all cards");

		Card(function(){
			View(function(){
				this.addClass("x-full flex pc-1em");
				View.Icon("beer");
				View("Something");
			});

			View.p().filler("1-3s");

			View(function(){
				this.addClass("x-full");
				View({
					tag: "img",
					content: function(){
						this.attr("src", "http://placehold.it/1200x150")
					}
				})
			});
		});

		Card(function(){
			View.h2("This is an H2 header").css("margin-bottom", 0);
			View.h3("This is a subheader").css("font-weight", "normal").css("margin", 0);
			View.p().filler("2-4s");
		});

		Card(function(){
			View("beeblebrox").addClass("name");

			this.append("I'm not sure if the content should go right in the box, or be wrapped in another div..");
		});

		Card(function(){
			View("beeblebrox").addClass("name");

			View("I'm not sure if the content should go right in the box, or be wrapped in another div..").addClass("content");
		});

		Card("What if I use consistent side padding and vertical/horizontal card spacing, no matter what the card size.");

		Card(function(){
			View.p("Maybe we keep top margin on the first child, and bottom margin on the last child...")
		});

		Card("This is a default card");
		Card(function(){
			View.p("Shouldn't the 'card' look be separate from the card's padding?");
			View.p("Either you have to then add a padding class, or use another class, like .paper, for the non-padded.");
			View.p("Or, the .paper is an internal thing, that Card extends?");
		});

		Card("This is a card with .p-2p override").addClass("p-2p");
		Card("The problem here, is that we can't have cards of different sizes stacked in a row, because the left-alignment of the text moves back and forth.").addClass("p-2p");

		Card("This is a .p-1p override, also with fs-80").addClass("p-1p fs-80")
		Card("I think the more likely situation, is that we prototype using atomic classes, and then when the appearance is stabilized, we give each thing a name").addClass("p-1p fs-80")

		Card(function(){
			this.addClass("p-3p");
			View(function(){
				this.addClass("x-full tt-u fs-120 fw-b pad");
				this.filler("1s");
			});
			View.p("All em padding would have to be reversed for all <>1em elements, like headers.")
			View.p().filler("2-5s");
			View.h1("Headers are now an issue");
			View.p().filler("2-5s");
			View.p().filler("2-5s");
			View(function(){
				this.addClass("x-full tt-u fs-120 fw-b pad");
				this.filler("1s");
			});
			View.p().filler("2-5s");
			View.p().filler("2-5s");
			View("I think 3% is a good amount, for any resolution...").addClass("p-3p ddd");
			View.p().filler("2-5s");
			View.p().filler("2-5s");
		});

		Card(function(){
			this.addClass("p-2p");
			View(function(){
				this.addClass("x-full tt-u fs-120 fw-b pad");
				this.filler("1s");
			});
			View.p().filler("2-5s");
			View.p().filler("2-5s");
			View.h1("Headers are now an issue?");
			View.p().filler("2-5s");
			View.p().filler("2-5s");
		});

		Card.make(6, {
			content: function(){
				View.h3("Title");
				// View().addClass("x-full mh5");
				View.p().filler("3s");
			}
		});
	});
// });

test("typography", function(){
	View.p().filler("3-5s");
	View.h1("This is an h1 header tag");

	View.p().filler("3-5s");
	View.p().filler("3-5s");

	View.h2("This is an h2 header tag");
	View.p().filler("3-5s");
	View.p().filler("3-5s");

	View.h3("This is an h3 header tag");
	View.p().filler("3-5s");
	View.p().filler("3-5s");
	View.p().filler("3-5s");

	View({ tag: "h4", content: "This is an h4 header tag" });
	View.p().filler("3-5s");
	View.p().filler("3-5s");

	View({ tag: "h5", content: "This is an h5 header tag"});
	View.p().filler("3-5s");
	View.p().filler("3-5s");

	View({tag: "h6", content: "This is an h6 header tag"});
	View.p().filler("3-5s");
	View.p().filler("3-5s");
});


test("% padding, em spacing", function(){
	View(function(){
		this.addClass("x-all");

		test("p-5p", function(){
			View(function(){
				this.addClass("p-5p");

				// View().addClass("x-full mh5");

				View.p("This is a p-5p container.  The paragraphs should use the default 1em spacing.  This should allow responsive spacing on small and large resolutions, and also acceptable spacing.");

				View.h1("This is an h1 header tag");

				View.p().filler("3-5s");
				View.p().filler("3-5s");

				View.h2("This is an h2 header tag");
				View.p().filler("3-5s");
				View.p().filler("3-5s");

				View.h3("This is an h3 header tag");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View.p().filler("3-5s");

				View({ tag: "h4", content: "This is an h4 header tag" });
				View.p().filler("3-5s");
				View.p().filler("3-5s");

				View({ tag: "h5", content: "This is an h5 header tag"});
				View.p().filler("3-5s");
				View.p().filler("3-5s");

				View({tag: "h6", content: "This is an h6 header tag"});
				View.p().filler("3-5s");
				View.p().filler("3-5s");



				View("test").addClass("x-full");
				View.p().filler("3-5s");
				View.p().filler("3-5s");

				// View().addClass("x-full mh5");
			});			
				View().addClass("x-full mh5").css("background", "#aaa");
			View(function(){
				this.addClass("p-5p");

				// View().addClass("x-full mh5");

				View.p("This is a p-5p container.  The paragraphs should use the default 1em spacing.  This should allow responsive spacing on small and large resolutions, and also acceptable spacing.");

				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View.p().filler("3-5s");

				// View().addClass("x-full mh5");
			});
		});
	})
});


test("nesting percentage paddings", function(){

	View(function(){
		this.addClass("x-all");


		test("p-1em", function(){

			View(function(){
				this.addClass("p-2p s-1em");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
				View.p().filler("3-5s");
				View(function(){
					View.p().filler("3-5s");
					View.h3("Content can still be divided into full sections to control padding");
					View.p("Can't nest % padding, and get accurate full width negative margin calculations...");
					View.p().filler("3-5s");
					View.p().filler("3-5s");
					View.p().filler("3-5s");
					View().addClass("x-full mh5");
					View.p().filler("3-5s");
					View.p().filler("3-5s");
					View().addClass("x-full mh5");
				}).addClass("x-full p-2p");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
			});

			View(function(){
				this.addClass("p-1em s-1em");
				View(function(){
					View.h1("Starts and ends with a full-width section");
				}).addClass("x-full");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
			});

		});

	});
});

test("x-all", function(){
	View(function(){
		this.addClass("x-all");

		test("p-2p", function(){

			View(function(){
				this.addClass("p-2p s-1em");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
			});

			View(function(){
				this.addClass("p-2p s-1em");
				View(function(){
					View.h1("Starts and ends with a full-width section");
				}).addClass("x-full");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
			});

		});
		test("p-1em", function(){

			View(function(){
				this.addClass("p-1em s-1em");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
				View.p().filler("3-5s");
				View(function(){
					View.p().filler("3-5s");
					View.h3("Content can still be divided into full sections to control padding");
					View.p("Can't nest % padding, and get accurate full width negative margin calculations...");
					View.p().filler("3-5s");
					View.p().filler("3-5s");
					View.p().filler("3-5s");
					View().addClass("x-full mh5");
					View.p().filler("3-5s");
					View.p().filler("3-5s");
					View().addClass("x-full mh5");
				}).addClass("x-full p-5em");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
			});

			View(function(){
				this.addClass("p-1em s-1em");
				View(function(){
					View.h1("Starts and ends with a full-width section");
				}).addClass("x-full");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View.p().filler("3-5s");
				View().addClass("x-full mh5");
			});

		});

	});
});

test("neg margins %", function(){
	View(function(){
		this.addClass("pad-p");

			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
		View().addClass("full-2");
			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
		View().addClass("full-2");
		View().addClass("full-2");
			p().filler("1-3s");
			p().filler("1-3s");
	});
	View(function(){
		this.addClass("pad-p");

		View().addClass("full-2");
			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
		View().addClass("full-2");
			p().filler("1-3s");
		View().addClass("full-2");
		View().addClass("full-2");
			p().filler("1-3s");
		View().addClass("full-2");
	});
});
test("neg margins", function(){
	View(function(){
		this.addClass("pad-m");

		View().addClass("full-2");
			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
		View().addClass("full-2");
			p().filler("1-3s");	
		View().addClass("full-2");
		View().addClass("full-2");
			p().filler("1-3s");
		View().addClass("full-2");
	});
});

test("lake", function(){
	View(function(){
		this.addClass("ddd pad-l");

		Card(function(){
			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
		});
	});

	View(function(){
		this.addClass("pad-p blue-rad-grad");
		Card(function(){
			p().filler("1-3s");
			p().filler("1-3s");
			p().filler("1-3s");
		});
	});
});

test("basic", function(){
	p().filler("1-3s");
	p().filler("1-3s");
	p().filler("1-3s");
});

test("stacked", function(){
	View(function(){
		this.addClass("itm stacked");
		p().filler("1-3s");
		p().filler("1-3s");
		p().filler("1-3s");
	});
});

test("padded", function(){
	View(function(){
		this.addClass("pad-m itm");
		View.h1("Adjust the container's font-size in order to scale all font-sizes and padding").addClass("tt-u ff-ab")
		p().filler("1-3s");
		p().filler("1-3s");
		View.h1("H1");
		p().filler("1-3s");
		View.h2("H2");
		p().filler("1-3s");

	});
});