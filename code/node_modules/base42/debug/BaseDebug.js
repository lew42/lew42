var is = require("util42").is;
var Base = require("../v1");
var Method = require("method42/v6");

var assign = require("assign42/v3")();

assign.prop = function(obj, name, value){
	if (is.fn(obj["set_"+name]))
		obj["set_"+name](value);
	else if (is.fn(value) && !is.Class(value) && name.indexOf("config") !== 0 && (obj.hasOwnProperty("log") && obj.log.active)){
		obj.log("." + name + " => <method>");
		Method(value).assignTo(obj, name);
	} else if (value && is.fn(value.assignTo)){
		value.assignTo(obj, name);
	} else {
		obj[name] = value;
	}
};

var Debug = module.exports = Base.extend({
	name: "DBase",
	log: true
}).assign({
	log: true,
	Method: Method
});

Method(Debug.extend).assignTo(Debug, "extend");
Method(Debug.prototype.instantiate).assignTo(Debug.prototype, "instantiate");
Method(assign).assignTo(Debug.prototype, "assign");
// Method(Debug.prototype.initialize).assignTo(Debug.prototype, "initialize");