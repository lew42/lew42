var Page2 = require("page42/Page2");
var View = require("view42");
var Test = require("test42");

var Router = require("route42/Route6");

var $ = require("jquery");

var App2 = module.exports = Page2.extend({
	name: "App2",
	instantiate: function(){
		this.route = Router();
		this.app = this;
		this.activePage = this;
		this.pages = [];
		this.allPages = [];
		return Page2.prototype.instantiate.apply(this, arguments);
	},
	initialize: function(){
		this.init();

		$(function(){
			this.prependTo("body");
			this.render();
			this.route.matchAndActivate();

			setTimeout(function(){
				$(window).resize();
			}, 0);

		}.bind(this));
	},
	set_home: function(homepage){
		homepage.set_route(this.route);
		this.addPage(homepage);
		this.home = homepage;
	},
	loadPage: function(){
		
	},
	preparePath: function(path, ext){
		var parts;
		// clean it
		path = path.replace("./", "").replace("." + ext + ".js", "");
		parts = path.split("/");

		// redudant last 2 parts?
		if (parts[parts.length - 1] === parts[parts.length - 2])
			parts.pop();

		return parts.join("/");
	},
	loadPages: function(req, ext, parentRoute){
		var keys = req.keys(),
			path, route, pages = [], page;

		parentRoute = parentRoute || this.route;

		for (var i = 0; i < keys.length; i++){

			// require the page
			page = req(keys[i]);
			path = this.preparePath(keys[i], ext);

			if (page instanceof Page2){
				route = parentRoute.add(path);
				page.set({
					// order matters, for my test page
					route: route, // (triggers set_route)
					app: this
				}); // needed for getParentPageFromRoute()
				pages.push(page);
				this.allPages.push(page);
			} else {
				console.warn("expecting page instance");
			}
		}

		for (var i = 0; i < pages.length; i++){
			pages[i].getParentPageFromRoute();
		}
	},
	loadTests: function(req, testRoute, TestPage){
		// // return false;
		// var testRoute = this.route.add("test");

		// var keys = req.keys(), key, path, parts, route, routes = [], page, pages = [];

		var keys = req.keys(),
			path, route, pages = [], page;

		// var testPage = Page2({
		// 	route: testRoute,
		// 	content: function(){
		// 		View("Back").click(function(){
		// 			this.route.parent.activate();
		// 		}.bind(this));
		// 		var testPage = this;
		// 		View.h1("test/");
		// 		this.route.each(function(route){
		// 			View(function(){
		// 				this.addClass("flex " + route.part);
		// 				View(route.part);
		// 				View.Icon("angle-right");
		// 				this.click(function(){
		// 					route.activate();
		// 				});
		// 			})
		// 		});
		// 	}
		// });

		// this.addPage(testPage);

		for (var i = 0; i < keys.length; i++){
			path = this.preparePath(keys[i], "tests");
			route = testRoute.add(path);

			page = TestPage({
				app: this,
				route: route,
				key: keys[i],
				req: req
			});

			pages.push(page);
		}

		for (var i = 0; i < pages.length; i++){
			pages[i].getParentPageFromRoute();
		}
	}
});