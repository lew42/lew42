var Mod1 = require("mod42/Mod1");
var Q1 = require("q42/Q1");

var Value1 = module.exports = Mod1.extend({
	name: "Value1",
	value: undefined, // storage for any value
	changed: Q1(), // needs to be adopted...?
	instantiate: function(){
		this.inst_changed();
		return Mod1.prototype.instantiate.apply(this, arguments);
	},
	inst_changed: function(){
		this.changed = Q1({ // maybe clone the underlying Q?
			parent: this
		});
		// this fn is overridden in Prop1
	},
	set: {
		other: function(value, val){
			value.set_value(val);
		}
	},
	set_value: function(value){
		// filters? wait/change incoming value?
		if (this.value !== value){
			this.value = value;
			this.changed.exec(value);
		}
	},
	get_value: function(){
		return this.value;
	}
});