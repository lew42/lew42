var Mod = require("mod42/v3");
var is = require("util42").is;
var track = require("track42");

var Mfn = Mod.extend({
	name: "Mfn2",
	cloneable: true,
	set: function(value){
		if (is.fn(value)){
			this.main = value;
		}
	},
	initialize: function(){
		this.init_fn();
		this.init();
	},
	init_fn: function(){
		var self = this;

		this.fn = function(){
			return self.main.apply(self, [this].concat([].slice.call(arguments)));
		};

		this.fn.mfn = this;

		if (this.cloneable){
			this.fn.clone = function(o){
				return this.mfn.clone.apply(this.mfn, arguments).fn;
			};
		}
	},
	clone: function(){
		var clone = Object.create(this);
		track(clone);
		clone.instantiate.apply(clone, arguments);
		return clone;
	},
	assignedTo: function(parent, name){
		if (!this.hasOwnProperty("name"))
			this.name = name;
		else if (this.name !== name){
			console.warn("change mfn name?");
		}

		parent[name] = this.fn;
	},
	main: function(ctx){}
});

module.exports = Mfn;