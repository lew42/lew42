var Mfn = require("mfn42");
var is = require("util42").is;

var Assign1 = module.exports = Mfn.extend({
	name: "Assign1",
	cloneable: false,
	clone: undefined,
	main: function(mod, name, value){
		if (is.str(name)){
			if (arguments.length !== 3)
				console.warn("Only 1 name/value pair is allowed");
			this.assignment(mod, name, value);
		} else {
			this.objs.apply(this, arguments);
		}
		return mod;
	},
	assignment: function(mod, name, value){
		if (is.fn(mod["set_"+name]))
			mod["set_"+name](value);
		else
			mod[name] = value;
		
		if (value && is.fn(value.assignedTo)) value.assignedTo(mod, name);
	},
	objs: function(mod){
		for (var i = 1; i < arguments.length; i++){
			// Usage: Ext.assign(Base) was logging this warning.. 
			if (!is.obj(arguments[i]) && !is.Class(arguments[i]))
				console.warn("Only objects, or name/value pairs, are allowed");
			this.obj(mod, arguments[i]);
		}
	},
	obj: function(mod, obj){
		for (var i in obj){
			this.assignment(mod, i, obj[i]);
		}
	}
});