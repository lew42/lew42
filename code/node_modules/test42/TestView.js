var View = require("view42");
// var Item = require("Item");

require("./Test.less");

var Test;

var $ = require("jquery");
var prism = require("prismjs");

var TestView = module.exports = View.extend({
	addClass: "test light",
	expand: true,
	header: View.x({
		addClass: "header",
		content: function(){
			var testView = this.parent;
			var test = testView.parent;

			this.item = View.Item({
				name: test.name,
				icon: "beer",
				btn: "bolt"
			});
			this.item.btn.click(function(){
				// console.log(test.route);
				if (test.route){
					window.location = test.route.path;
				}
			})
		}
	}),
	body: View.x({
		addClass: "body padded",
		content: function(){
			var testView = this.parent;
			var test = testView.parent;
			var self = this;
			test.view = testView;
			this.hide();

			var code, codes;

			if (test.enabled){

				this.nested = View(function(){
					self.nested = this;
					test.fn();
				}).addClass("nested");
				// run the tests

				if (test.tests.length){
					this.show();
				} else {
					// code = test.fn.toString();
					// codes = code.split("\r\n");
					// codes.shift();
					// codes.pop();
					// // debugger;
					// while (codes[0].indexOf("\t") === 0){
					// 	for (var i = 0; i < codes.length; i++){
					// 		codes[i] = codes[i].replace("\t", "");
					// 	}
					// }
					// code = codes.join("\r\n");
					
					// View({tag: "pre", addClass: "language-javascript" }, function(){
					// 	View({tag: "code"}, function(){
					// 		$(prism.highlight(code, prism.languages.javascript)).appendTo(this.$el);
					// 	});
					// });


					// var pre = View({tag: "pre"}, code);
					// var editor = ace.edit(pre.$el[0]);
					// editor.setOptions({
					// 	maxLines: 100
					// });
					// editor.renderer.setScrollMargin(5, 5);
					// editor.setTheme("ace/theme/tomorrow_night")
					// editor.session.setMode("ace/mode/javascript")

					// editor.on("change", function(e){

					// });

					this.nested.hide();
				}

				if (this.nested.html().length){
					this.show();
					this.nested.show();
				}

				if (test.pass){
					View.p(test.pass + " passed").css("color", "green");
					this.show();
				}
				if (test.fail){
					testView.addClass("failed");
					View.p(test.fail + " failed").css("color", "red");
					this.show();
				} else {
					testView.addClass("passed");
				}
			} else {
				testView.addClass("disabled")
			}
		},
	}),
	content: function(){
		this.header.render();
		if (!this.expand)
			this.body.hide();
		this.body.render();
	},
	behaviors: function(){
		var view = this;
		this.header.item.label.click(function(){
			view.body.toggle();
		});
	}
});


// var TestView = module.exports = View.extend({
// 	log: false,
// 	name: "TestView",
// 	addClass: "test light",
// 	expand: true,
// 	init: function(){
// 		this.parent.view = this;
// 	},
// 	Header: View.AutoSub.extend({
// 		addClass: "header",
// 		content: function(){
// 			var testView = this.parent;
// 			var test = testView.parent;

// 			this.item = Item({
// 				icon: "beer",
// 				label: test.name,
// 				content: function(){
// 					this.icon.render();
// 					this.label.render();
// 					this.btn = new this.Icon({
// 						name: "btn",
// 						addClass: "btn",
// 						type: "bolt"
// 					}).click(function(){
// 						console.log(test.route)
// 						if (test.route){
// 							// test.root.route.deactivate();
// 							// console.clear();
// 							// test.route.activate()
// 							window.location = test.route.path;
// 						}
// 					});
// 				}
// 			});
// 		}
// 	}),
// 	Body: View.AutoSub.extend({
// 		addClass: "body",
// 		content: function(){
// 			var testView = this.parent;
// 			var test = testView.parent;

// 			this.hide();

// 			// console.log(View.captor === this);

// 			if (test.enabled){

// 				this.nested = View(function(){
// 					test.fn();
// 				}).addClass("nested");
// 				// run the tests

// 				if (test.tests.length){
// 					this.show();
// 				} else {
// 					this.nested.hide();
// 				}

// 				if (this.nested.html().length){
// 					this.show();
// 					this.nested.show();
// 				}

// 				if (test.pass){
// 					View.p(test.pass + " passed").css("color", "green");
// 					this.show();
// 				}
// 				if (test.fail){
// 					testView.addClass("failed");
// 					View.p(test.fail + " failed").css("color", "red");
// 					this.show();
// 				} else {
// 					testView.addClass("passed");
// 				}
// 			} else {
// 				testView.addClass("disabled")
// 			}
// 		}
// 	}),
// 	content: function(){
// 		this.header.render();
// 		if (!this.expand)
// 			this.body.hide();
// 		this.body.render();
// 	},
// 	behaviors: function(){
// 		var view = this;
// 		this.header.item.label.click(function(){
// 			view.body.toggle();
// 		});
// 	}
// });