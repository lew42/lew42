var createConstructor = require("../v1/createConstructor");
var extend = require("../extend");
var track = require("track42");
var is = require("util42").is;

var assign = function(){
	// var args = [].slice.call(arguments);
	// Object.assign.apply(Object, [this].concat(args));

	// might be slower, but kinda nice
	Object.assign.bind(Object, this).apply(Object, arguments);
	return this;
};

var Base = createConstructor("Base4");
track(Base);
track(Base.prototype);

Base.assign = Base.prototype.assign = assign;

Base.prototype.name = "base";


Base.assign({
	extend: extend,
	createConstructor: createConstructor,
	track: track
});

Base.prototype.assign({
	instantiate: function(){
		this.assign.apply(this, arguments);
		this.initialize && this.initialize.apply(this, arguments);
	},
	config: function(){
		this.constructor.track(this);
	},
	clone: function(){
		var clone = Object.create(this);
		clone.config.apply(clone, arguments);
		clone.instantiate.apply(clone, arguments);
		return clone;
	}
});

module.exports = Base;