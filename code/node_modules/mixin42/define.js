module.exports = {
	init_define: function(parent, name){
		var self = this;

		if (this.name !== name)
			console.warn("this.name should probably always equal the defined property name");

		Object.defineProperty(parent, name, {
			get: function(){
				return self.getter(this);
			},
			set: function(value){
				self.setter(value, this);
			},
			configurable: true
		});
	},
	getter: function(){
		console.warn("override me");
	},
	setter: function(value, ctx){
		if (!ctx.hasOwnProperty(this.name)){
			console.warn("setter should probably auto-protect also...");
		}
		this.value = value;
		console.warn("this should be overridden");
	}
};