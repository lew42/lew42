var Base = require("base42");

var Assign = require("assign42/v1");
var assign = Assign().fn;

var Set = require("set42");
var set = Set().fn;

var Extend = require("extend42");
var extend = Extend().fn;

var createConstructor = require("./createConstructor");

var Mod = module.exports = Base.extend({
	name: "Mod2",
	assign: assign,
	set: set,
	instantiate: function(){
		this.set.apply(this, arguments);
		this.initialize.apply(this, arguments);
	},
	initialize: function(){
		this.init();
	},
	init: function(){}
}).assign({
	assign: assign,
	extend: extend,
	set: set,
	// createConstructor: createConstructor // not sure if this export idea is a good one... just make a helper function to do it
});

// this means you have to manually extend Mod.Sub when you extend Mod...
Mod.Sub = Mod.extend({
	name: "Sub1",
	set_parent: function(parent){
		this.parent = parent;
	},
	set_name: function(name){
		this.name = name;
	},
	assignedTo: function(parent, name){
		if (!this.hasOwnProperty('parent')){
			this.set_parent(parent);
			this.set_name(name);
		}
	}
});