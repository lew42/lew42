var View = require("view42");
require("./Path.less");

var PathView = module.exports = View.extend({
	name: "PathView",
	addClass: "item",
	preview: View.x({
		addClass: "item",
		content: function(){
			this.isActiveNode.render();
			this.isActive.render();
			this.isActiveParent.render();
			this.label.render();
			this.activeChild.render();
			this.activator.render();
		},
		isActiveNode: View.Icon.x("flag").hide().set({
			bindings: function(){
				var path = this.parent.parent.parent;
				path.isActiveNodeQ.append(function(value){
					this.sync(value);
				}.bind(this));
			},
			sync: function(isActiveNode){
				if (isActiveNode)
					this.show();
				else
					this.hide();
			}
		}),
		isActive: View.Icon.x("asterisk").hide().set({
			bindings: function(){
				var path = this.parent.parent.parent;
				path.isActiveQ.append(function(value){
					this.sync(value);
				}.bind(this));
			},
			sync: function(isActive){
				if (isActive)
					this.show();
				else
					this.hide();
			}
		}),
		isActiveParent: View.Icon.x("pinterest").hide().set({
			bindings: function(){
				var path = this.parent.parent.parent;
				path.isActiveParentQ.append(function(value){
					this.sync(value);
				}.bind(this));
			},
			sync: function(isActiveParent){
				if (isActiveParent)
					this.show();
				else
					this.hide();
			}
		}),
		label: View.x(function(){
			var path = this.parent.parent.parent;
			this.append(path.name + "{" + path.id + "}")
				.addClass("label");
		}),
		activeChild: View.x({
			icon: View.Icon.x("hashtag"),
			labl: View.x(),
			content: function(){
				this.icon.render();
				this.labl.render();
			},
			bindings: function(){
				var path = this.parent.parent.parent;
				path.activeChildQ.append(function(value){
					this.sync(value);
				}.bind(this));
			},
			sync: function(activeChild){
				// console.log("activeChild", activeChild);
				if (activeChild){
					this.labl.text(activeChild.id);
					this.show();
				} else {
					this.hide();
				}
			}
		}).hide(),
		activator: View.Icon.x({
			addClass: "activator",
			type: "bolt",
			behaviors: function(){
				this.click(function(){
					var path = this.parent.parent.parent;
					path.activate();
				}.bind(this))
			}
		})
	}),
	children: View.x(function(){
		var path = this.parent.parent;
		path.each(function(p){
			p.render();
		});
	}),
	content: function(){
		this.preview.render();
		this.children.render();
	}
});