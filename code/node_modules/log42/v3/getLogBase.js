var NOOP = function(){};
var is = require("util42/is");
var getLogBase = module.exports = function(on){
	// activeLogBase
	var active = console.log.bind(console);
	
	// noopLogBase
	var noop = function(){};
	
	active.isActive = true;
	noop.isActive = false;

	["log", "group", "debug", "trace", "error", "warn", "info"].forEach(function(method){
		active[method] = console[method].bind(console);
		noop[method] = NOOP;
	});

	active.groupc = console.groupCollapsed.bind(console);
	noop.groupc = NOOP;

	active.end = console.groupEnd.bind(console);
	noop.end = NOOP;

	active.close = function(fn, ctx){
		if (fn) fn.call(ctx);
		this.end();
	};
	noop.close = function(fn, ctx){
		if (fn) fn.call(ctx);
	};

	active.noop = noop;
	active.active = active;
	noop.active = active;
	noop.noop = noop;

	// `on` is passed in as a fn arg
	return is.def(on) && !on ? noop : active;
};