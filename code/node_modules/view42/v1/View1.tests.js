var test = require("test42");
var view = require("view42");
var assert = test.assert;
var util = require("util42");
var is = util.is;

var View = require("./View1");


test("Class", function(){
	test.assertClass(View)
});

test("View", function(){
	this.view.$el.attr("id", "mine");

	// console.log(this.view.body.nested);

	var v = View({log: true}, function(){
		this.addClass("root");

		this.append({
			one: View("one"),
			two: View("two")
		});

		this.one.addClass("another-one");

		this.append(View({
			tag: "section",
			name: "adoptMe",
			three: View("three"),
			four: View(function(){
				var parent = this;
				while(parent){
					this.append(parent.name);
					parent = parent.parent;
				}
			})
		}));

		this.adoptMe.three.set("four");

	});
	// console.log(v);
	debugger;
	v.logger();
	// console.log(v.name);
	v.initialize();
	v.logger();
	var mine = document.getElementById("mine");
	var $mine = this.view.$el;

	assert(mine === $mine[0]);

	$mine.append(v.el);

	view("where");
});

/*
What's the secret view sauce?

View("hello", "world");

View(function(){
	this.append("hello", "world");
});

View({
	one: View("one"),
	two: View(function(){}),
	nonView: "value"
});


*/