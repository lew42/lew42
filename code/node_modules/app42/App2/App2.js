var Page2 = require("page42/Page2");
var View = require("view42");
var Test = require("test42");

var Router = require("route42/Route6");

var $ = require("jquery");

var App2 = module.exports = Page2.extend({
	name: "App2",
	instantiate: function(){
		this.route = Router();
		this.app = this;
		this.activePage = this;
		Page2.prototype.instantiate.apply(this, arguments);
	},
	initialize: function(){
		this.init();

		$(function(){
			this.prependTo("body");
			this.render();
			this.route.matchAndActivate();

			setTimeout(function(){
				$(window).resize();
			}, 0);

		}.bind(this));
	},
	set_home: function(homepage){
		homepage.set_route(this.route);
		this.addPage(homepage);
		this.home = homepage;
	},
	loadPage: function(){
		
	},
	loadPages: function(req){
		var pageKeys = req.keys(),
			routeString, routeParts, route, pages = [], page;

		for (var i = 0; i < pageKeys.length; i++){
			routeString = pageKeys[i].replace("./", "").replace(".page.js", "");
			routeParts = routeString.split("/");
			if (routeParts[routeParts.length - 1] === routeParts[routeParts.length - 2])
				routeParts.pop();

			routeString = routeParts.join("/");

			// require the page
			page = req(pageKeys[i]);

			if (page instanceof Page2){
				page.app = this; // needed for getParentPageFromRoute()
				pages.push(page);
				route = this.route.add(routeString);
				page.set_route(route);
			}
		}

		for (var i = 0; i < pages.length; i++){
			pages[i].getParentPageFromRoute();
		}
	},
	loadTests: function(req){
		// return false;
		var testRoute = this.route.add("test");

		var keys = req.keys(), key, path, parts, route, routes = [], page, pages = [];

		var testPage = Page2({
			route: testRoute,
			content: function(){
				View("Back").click(function(){
					this.route.parent.activate();
				}.bind(this));
				var testPage = this;
				View.h1("test/");
				this.route.each(function(route){
					View(function(){
						this.addClass("flex " + route.part);
						View(route.part);
						View.Icon("angle-right");
						this.click(function(){
							route.activate();
						});
					})
				});
			}
		});

		this.addPage(testPage);

		for (var i = 0; i < keys.length; i++){
			key = keys[i];
			path = key.replace("./", "").replace(".tests.js", "");
			parts = path.split("/");

			if (parts[parts.length - 1] === parts[parts.length - 2])
				parts.pop();

			path = parts.join("/");

			route = testRoute.add(path);

			page = Page2({
				app: this,
				route: route,
				key: key,
				content: function(){
					View("Back").click(function(){
						this.route.parent.activate();
					}.bind(this));
					View.h1(this.name);
					// View("parent: " + this.parent.name);
					Test.route = this.route;
					this.route.remainder = this.route.reminder || [];
					req(this.key);
				}
			});

			routes.push(route);
			pages.push(page);
		}

		for (var i = 0; i < pages.length; i++){
			pages[i].getParentPageFromRoute();
		}


		var fillSparseRoutes = function(route){
			route.each(function(rt){
				if (rt.routes.length){
					if (!rt.page){
						rt.page = Page2({
							app: rt.parent.page.app,
							route: rt,
							content: function(){
								View("Back").click(function(){
									this.route.parent.activate();
								}.bind(this));
								View.h1(this.name);
								this.route.each(function(route){
									View(function(){
										this.addClass("flex");
										View(route.part);
										View.Icon("angle-right");
										this.click(function(){
											route.activate();
										});
									});
								});
							}
						});
					}
					fillSparseRoutes(rt);
				}
			});
		};

		fillSparseRoutes(testRoute);
	}
});