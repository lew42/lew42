var logger = require("log42");
var log = logger();
log.groupc("base42/v2/Base2.js");
log.close(function(){

var createConstructor = require("./createConstructor");
var extend = require("../extend");
var assign = require("assign42/v3");
var track = require("track42");
var is = require("util42").is;


var Base = createConstructor("Base2");
track(Base);
track(Base.prototype);

Base.assign = Base.prototype.assign = assign;


Base.assign({
	extend: extend,
	createConstructor: createConstructor,
	track: track
});

Base.prototype.assign({
	instantiate: function(){
		this.assign.apply(this, arguments);
		this.initialize.apply(this, arguments);
	},
	config: function(){
		this.constructor.track(this);
		this.config_log.apply(this, arguments);
	},
	config_log: function(o){
		if (o && is.def(o.log)){
			this.log = o.log;
			delete o.log;
		}
	},
	initialize: function(){
		this.init();
	},
	init: function(){}
});

logger.install(Base.prototype);

module.exports = Base;


var simpleCreateConstructor = require("./simpleCreateConstructor");
// no logger
// no auto-assign
var Simple = Base.Simple = simpleCreateConstructor("Simple");
track(Simple);
track(Simple.prototype);

Simple.assign = Simple.prototype.assign = assign;

Simple.assign({
	extend: extend,
	createConstructor: simpleCreateConstructor,
	track: track
});

Simple.prototype.assign({
	instantiate: function(){}
});

});